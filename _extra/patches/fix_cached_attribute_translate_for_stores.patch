From ec518f64a33b2a807185e2a93f9e0e23122633bb Mon Sep 17 00:00:00 2001
From: Harniuk Bohdan <bohar@smile.fr>
Date: Mon, 26 Nov 2018 10:17:23 +0200
Subject: [PATCH] changes applied to patch

---
 Metadata/AddressCachedMetadata.php  |  5 ++++-
 Metadata/CachedMetadata.php         | 25 +++++++++++++++++++------
 Metadata/CustomerCachedMetadata.php |  5 ++++-
 3 files changed, 27 insertions(+), 8 deletions(-)

diff --git a/vendor/magento/module-customer/Model/Metadata/AddressCachedMetadata.php b/vendor/magento/module-customer/Model/Metadata/AddressCachedMetadata.php
index 5088a19..a76d63f 100644
--- a/vendor/magento/module-customer/Model/Metadata/AddressCachedMetadata.php
+++ b/vendor/magento/module-customer/Model/Metadata/AddressCachedMetadata.php
@@ -6,6 +6,7 @@
 namespace Magento\Customer\Model\Metadata;

 use Magento\Customer\Api\AddressMetadataInterface;
+use Magento\Store\Model\StoreManagerInterface;

 /**
  * Cached customer address attribute metadata
@@ -21,12 +22,14 @@ class AddressCachedMetadata extends CachedMetadata implements AddressMetadataInt
      * Constructor
      *
      * @param AddressMetadata $metadata
+     * @param StoreManagerInterface $storeManager
      * @param AttributeMetadataCache|null $attributeMetadataCache
      */
     public function __construct(
         AddressMetadata $metadata,
+        StoreManagerInterface $storeManager,
         AttributeMetadataCache $attributeMetadataCache = null
     ) {
-        parent::__construct($metadata, $attributeMetadataCache);
+        parent::__construct($metadata, $storeManager, $attributeMetadataCache);
     }
 }
diff --git a/vendor/magento/module-customer/Model/Metadata/CachedMetadata.php b/vendor/magento/module-customer/Model/Metadata/CachedMetadata.php
index 52904b2..298f479 100644
--- a/vendor/magento/module-customer/Model/Metadata/CachedMetadata.php
+++ b/vendor/magento/module-customer/Model/Metadata/CachedMetadata.php
@@ -7,6 +7,8 @@

 use Magento\Customer\Api\MetadataInterface;
 use Magento\Framework\App\ObjectManager;
+use Magento\Eav\Model\Entity\AttributeCache;
+use Magento\Store\Model\StoreManagerInterface;

 /**
  * Cached attribute metadata service
@@ -30,19 +32,27 @@ class CachedMetadata implements MetadataInterface
      */
     protected $metadata;

+    /**
+     * @var StoreManagerInterface
+     */
+    protected $storeManager;
+
     /**
      * Constructor
      *
      * @param MetadataInterface $metadata
+     * @param StoreManagerInterface $storeManager
      * @param AttributeMetadataCache|null $attributeMetadataCache
      */
     public function __construct(
         MetadataInterface $metadata,
+        StoreManagerInterface $storeManager,
         AttributeMetadataCache $attributeMetadataCache = null
     ) {
         $this->metadata = $metadata;
         $this->attributeMetadataCache = $attributeMetadataCache ?: ObjectManager::getInstance()
             ->get(AttributeMetadataCache::class);
+        $this->storeManager = $storeManager;
     }

     /**
@@ -64,12 +74,13 @@ public function getAttributes($formCode)
      */
     public function getAttributeMetadata($attributeCode)
     {
-        $attributesMetadata = $this->attributeMetadataCache->load($this->entityType, $attributeCode);
+        $store = $this->storeManager->getStore()->getCode();
+        $attributesMetadata = $this->attributeMetadataCache->load($this->entityType, $attributeCode . '_' .  $store);
         if (false !== $attributesMetadata) {
             return array_shift($attributesMetadata);
         }
         $attributeMetadata = $this->metadata->getAttributeMetadata($attributeCode);
-        $this->attributeMetadataCache->save($this->entityType, [$attributeMetadata], $attributeCode);
+        $this->attributeMetadataCache->save($this->entityType, [$attributeMetadata], $attributeCode . '_' .  $store);
         return $attributeMetadata;
     }

@@ -78,12 +89,13 @@ public function getAttributeMetadata($attributeCode)
      */
     public function getAllAttributesMetadata()
     {
-        $attributes = $this->attributeMetadataCache->load($this->entityType, 'all');
+        $store = $this->storeManager->getStore()->getCode();
+        $attributes = $this->attributeMetadataCache->load($this->entityType, 'all_' . $store);
         if ($attributes !== false) {
             return $attributes;
         }
         $attributes = $this->metadata->getAllAttributesMetadata();
-        $this->attributeMetadataCache->save($this->entityType, $attributes, 'all');
+        $this->attributeMetadataCache->save($this->entityType, $attributes, 'all_' . $store);
         return $attributes;
     }

@@ -92,12 +104,13 @@ public function getAllAttributesMetadata()
      */
     public function getCustomAttributesMetadata($dataObjectClassName = null)
     {
-        $attributes = $this->attributeMetadataCache->load($this->entityType, 'custom');
+        $store = $this->storeManager->getStore()->getCode();
+        $attributes = $this->attributeMetadataCache->load($this->entityType, 'custom_' . $store);
         if ($attributes !== false) {
             return $attributes;
         }
         $attributes = $this->metadata->getCustomAttributesMetadata();
-        $this->attributeMetadataCache->save($this->entityType, $attributes, 'custom');
+        $this->attributeMetadataCache->save($this->entityType, $attributes, 'custom_' . $store);
         return $attributes;
     }
 }
diff --git a/vendor/magento/module-customer/Model/Metadata/CustomerCachedMetadata.php b/vendor/magento/module-customer/Model/Metadata/CustomerCachedMetadata.php
index 13e9ccc..87c494a 100644
--- a/vendor/magento/module-customer/Model/Metadata/CustomerCachedMetadata.php
+++ b/vendor/magento/module-customer/Model/Metadata/CustomerCachedMetadata.php
@@ -6,6 +6,7 @@
 namespace Magento\Customer\Model\Metadata;

 use Magento\Customer\Api\CustomerMetadataInterface;
+use Magento\Store\Model\StoreManagerInterface;

 /**
  * Cached customer attribute metadata service
@@ -21,12 +22,14 @@ class CustomerCachedMetadata extends CachedMetadata implements CustomerMetadataI
      * Constructor
      *
      * @param CustomerMetadata $metadata
+     * @param StoreManagerInterface $storeManager
      * @param AttributeMetadataCache|null $attributeMetadataCache
      */
     public function __construct(
         CustomerMetadata $metadata,
+        StoreManagerInterface $storeManager,
         AttributeMetadataCache $attributeMetadataCache = null
     ) {
-        parent::__construct($metadata, $attributeMetadataCache);
+        parent::__construct($metadata, $storeManager, $attributeMetadataCache);
     }
 }